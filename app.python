from flask import Flask, render_template_string, request, redirect, url_for, session
from flask_sqlalchemy import SQLAlchemy
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.secret_key = 'secret123'
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///database.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

db = SQLAlchemy(app)

# نماذج قاعدة البيانات
class Item(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(100), nullable=False)
    price = db.Column(db.Float, nullable=False)
    icon = db.Column(db.String(100), nullable=True)

class Sale(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    item_id = db.Column(db.Integer, db.ForeignKey('item.id'))
    quantity = db.Column(db.Integer, default=1)

with app.app_context():
    db.create_all()

ADMIN_PASSWORD_HASH = generate_password_hash('1234')

# القالب النهائي الاحترافي
TEMPLATE = '''
<!DOCTYPE html>
<html lang="ar">
<head>
<meta charset="UTF-8">
<title>نظام إدارة المبيعات</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>
<style>
body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin:0; padding:0; background:#f4f7fa; }
header { background:#1e90ff; color:#fff; padding:15px; text-align:center; box-shadow:0 2px 8px rgba(0,0,0,0.1);}
.container { padding:20px; max-width:1200px; margin:auto; }
.stats { display:flex; flex-wrap:wrap; gap:20px; margin-bottom:20px; }
.stat { background:#fff; padding:20px; border-radius:10px; flex:1; text-align:center; box-shadow:0 0 10px rgba(0,0,0,0.1); font-weight:bold; }
.items { display:grid; grid-template-columns: repeat(auto-fill,minmax(220px,1fr)); gap:20px; }
.item-card { background:#fff; padding:20px; border-radius:12px; box-shadow:0 3px 12px rgba(0,0,0,0.1); position:relative; transition:0.3s; }
.item-card:hover { transform: translateY(-5px); }
.item-card i { font-size:40px; margin-bottom:10px; color:#1e90ff; }
.item-card h4 { margin:0 0 10px 0; color:#333; }
.item-card p { margin:5px 0; font-weight:bold; color:#555; }
.item-card form, .item-card a { display:inline-block; margin-top:5px; }
button { padding:5px 12px; border:none; border-radius:6px; cursor:pointer; transition:0.2s; font-weight:bold; }
button.sell { background:#28a745; color:#fff; }
button.sell:hover { background:#218838; }
button.edit { background:#17a2b8; color:#fff; }
button.edit:hover { background:#117a8b; }
button.delete { background:#dc3545; color:#fff; }
button.delete:hover { background:#c82333; }
a.button-link { text-decoration:none; }
.top-bar { display:flex; justify-content:space-between; align-items:center; margin-bottom:20px; flex-wrap:wrap; }
a.logout { background:#dc3545; color:#fff; padding:8px 15px; border-radius:6px; text-decoration:none; font-weight:bold; }
form input[type=number] { width:60px; padding:3px; border-radius:4px; border:1px solid #ccc; }
input, select { padding:5px; border-radius:5px; border:1px solid #ccc; }
</style>
<script>
function confirmDelete() { return confirm('هل أنت متأكد من حذف هذا الصنف؟'); }
</script>
</head>
<body>

<header>
<h1>نظام إدارة المبيعات</h1>
</header>

<div class="container">
{% if not session.get('logged_in') %}
<h2>تسجيل الدخول</h2>
<form method="POST">
    كلمة المرور: <input type="password" name="password" required>
    <button type="submit" style="background:#1e90ff;color:#fff;">دخول</button>
</form>
{% if error %}<p style="color:red;">{{ error }}</p>{% endif %}
{% else %}

<div class="top-bar">
    <div class="stats">
        <div class="stat">عدد الأصناف: {{ items|length }}</div>
        <div class="stat">إجمالي المبيعات: {{ total_sales }} $</div>
        <div class="stat">أعلى عملية بيع: {% if top_sale_info %}{{ top_sale_info.name }} - {{ top_sale_info.price }} $ {% else %}-{% endif %}</div>
    </div>
    <a href="{{ url_for('logout') }}" class="logout">تسجيل خروج</a>
</div>

<a href="{{ url_for('add_item') }}" class="button-link"><button style="background:#ff9800;color:#fff;">إضافة صنف جديد</button></a>

<div class="items">
{% for item in items %}
<div class="item-card">
    <i class="{{ item.icon }}"></i>
    <h4>{{ item.name }}</h4>
    <p>{{ item.price }} $</p>
    <form action="{{ url_for('add_sale', item_id=item.id) }}" method="POST">
        <input type="number" name="quantity" value="1" min="1">
        <button type="submit" class="sell">بيع</button>
    </form>
    <a href="{{ url_for('edit_item', item_id=item.id) }}"><button class="edit">تعديل</button></a>
    <a href="{{ url_for('delete_item', item_id=item.id) }}" onclick="return confirmDelete();"><button class="delete">حذف</button></a>
</div>
{% endfor %}
</div>

{% endif %}
</div>

</body>
</html>
'''

@app.route('/', methods=['GET', 'POST'])
def login():
    error = None
    if request.method == 'POST':
        password = request.form['password']
        if check_password_hash(ADMIN_PASSWORD_HASH, password):
            session['logged_in'] = True
            return redirect(url_for('dashboard'))
        else:
            error = 'كلمة المرور غير صحيحة'
    return render_template_string(TEMPLATE, error=error, session=session, items=[], total_sales=0, top_sale_info=None)

@app.route('/dashboard')
def dashboard():
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    items = Item.query.all()
    sales = Sale.query.all()
    total_sales = sum([s.quantity * Item.query.get(s.item_id).price for s in sales])
    top_sale_info = None
    if sales:
        top_sale = max(sales, key=lambda s: s.quantity * Item.query.get(s.item_id).price)
        top_sale_info = Item.query.get(top_sale.item_id)
    return render_template_string(TEMPLATE, session=session, items=items, total_sales=total_sales, top_sale_info=top_sale_info)

@app.route('/add_item', methods=['GET','POST'])
def add_item():
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    if request.method=='POST':
        name = request.form['name']
        price = float(request.form['price'])
        icon = request.form['icon']
        item = Item(name=name, price=price, icon=icon)
        db.session.add(item)
        db.session.commit()
        return redirect(url_for('dashboard'))
    form_html = '''
<h3>إضافة صنف</h3>
<form method="POST">
    الاسم: <input name="name" required><br>
    السعر: <input name="price" type="number" step="0.01" required><br>
    أيقونة FontAwesome: <input name="icon"><br>
    <button type="submit" style="background:#28a745;color:#fff;">إضافة</button>
</form>
<a href="{{ url_for('dashboard') }}">رجوع</a>
'''
    return render_template_string(form_html)

@app.route('/edit_item/<int:item_id>', methods=['GET','POST'])
def edit_item(item_id):
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    item = Item.query.get_or_404(item_id)
    if request.method=='POST':
        item.name = request.form['name']
        item.price = float(request.form['price'])
        item.icon = request.form['icon']
        db.session.commit()
        return redirect(url_for('dashboard'))
    form_html = f'''
<h3>تعديل صنف</h3>
<form method="POST">
    الاسم: <input name="name" value="{item.name}" required><br>
    السعر: <input name="price" type="number" step="0.01" value="{item.price}" required><br>
    أيقونة FontAwesome: <input name="icon" value="{item.icon}"><br>
    <button type="submit" style="background:#17a2b8;color:#fff;">حفظ</button>
</form>
<a href="{{{{ url_for('dashboard') }}}}">رجوع</a>
'''
    return render_template_string(form_html)

@app.route('/delete_item/<int:item_id>')
def delete_item(item_id):
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    item = Item.query.get_or_404(item_id)
    db.session.delete(item)
    db.session.commit()
    return redirect(url_for('dashboard'))

@app.route('/add_sale/<int:item_id>', methods=['POST'])
def add_sale(item_id):
    if not session.get('logged_in'):
        return redirect(url_for('login'))
    quantity = int(request.form.get('quantity',1))
    sale = Sale(item_id=item_id, quantity=quantity)
    db.session.add(sale)
    db.session.commit()
    return redirect(url_for('dashboard'))

@app.route('/logout')
def logout():
    session.clear()
    return redirect(url_for('login'))

if __name__=='__main__':
    app.run(debug=True)